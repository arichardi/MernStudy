Fazer um descritivo do meu estudo de MERN

Criação de um sistema app básico com to do list usando Mongo Express React and Node

1º Criar um backend bem simples para dar suporte para o meu app

	Instalar uma estrutura básica para o programa com o npm init ou yarn
	Instalar os módulos que nós vamos usar para o desenvolvimento
	Express, Moongose, Body-parser, concurrently
	Instalar o Nodemon como dependencia!

	Criar um script para rodar em modo de servidor e um que rode o nodemon

	(estudar o body parser - ver se ele ainda é necessário, eu não posso substituir pelo json.express ?
	O body parser foi incorporado ao express, você pode usar o express.json() no lugar

	Criar uma key que relaciona o seu BD com o programa que você está usando, e conectar os dois usando o mongoose, como 
interface.
	Criar um app.listen para deixar o seu servidor rodando. Usar o enviroment.Port como possibilidade do servidor

2º Criar os modelos que eles vão utilizar para conversar com o BD

	Criar a pasta models, para gerir os modelos do BD
	Criar um arquivo com o nosso modelo e importar o mogoose e o Schema
	Criar um novo modelo de BD e exportar

3º Criar um sistema de rotas 

	Criar a pasta Routes/api
	Importar na pasta principal e mandar o redirecionamento dessas pastas pala lá
	app.use('endereço', arquivo do router)

	No arquivo router, você importa o express. e tras o Router(Método do express)
	Importar para o arquivo, também importar os modelos

****pesquisar direitinho export default vs module.exports

	construir um modo get e um modo post
	no modo get ele utiliza a função find() e tras absolutamente tudo, lembrando que o retorno é uma promisse
	no modo post, você cria um item novo do model e depois salva ele no DB com o comando save() que também é uma promisse

*****pesquisar a diferença entre await e .then

	Construir também um método de delete, e passar como característica o id

4º Criar uma pasta client e instalar o create-react-app lá
	
	Criar um proxy para o endereço na pasta do json

***aqui vai entrar o cuncurrently que permite que a gente execute os dois servidores ao mesmo tempo !	
	adiciona nos scripts     "client": "cd client && yarn start" (para entrar dentro da pasta client e executar o yarn)
	"dev": "concurrently \" yarn server\" \"yarn client\" " (para rodar os dois comandos ao mesmo tempo)
	"client-install": "cd client && yarn", (vai facilitar para instalar as dependencias do client)

	Dentro do projeto react, dar aquela limpada básica nos arquivos

	Primeiro passo, instalar o reactstrap (bootstrap) e fazer uma navbar básica
	Seguir a documentação da nav bar no site do reactstrap

	Fazer agora a lista

	